<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:my="clr-namespace:Jean_Doe.MusicControl"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d">
    <Style x:Key="combo_toggle" TargetType="{x:Type ToggleButton}">
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="{DynamicResource selectBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource lightBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <DockPanel Background="Transparent" LastChildFill="False" SnapsToDevicePixels="True">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="CheckRect"
                                                Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="CheckRect" Duration="0"
                                                Storyboard.TargetProperty="Opacity" To="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid DockPanel.Dock="Right"
                                Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                            <Border x:Name="OverRect" BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}" />
                            <Path Data="M0,0L3.5,3 7,0z" Fill="{TemplateBinding Foreground}"
                                    HorizontalAlignment="Center" VerticalAlignment="Center" />
                            <Border x:Name="CheckRect" Background="{DynamicResource skinBrush}" Opacity="0">
                                <Path Data="M0,0L3.5,3 7,0z" Fill="White" HorizontalAlignment="Center"
                                        VerticalAlignment="Center" />
                            </Border>

                        </Grid>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{Binding BorderBrush,RelativeSource={RelativeSource Self}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <sys:Double x:Key="{x:Static SystemParameters.VerticalScrollBarWidthKey}">25</sys:Double>
    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="4,4,21,4" SnapsToDevicePixels="True"
                                        Stroke="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"
                                        StrokeThickness="1" StrokeDashArray="1 2" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ComboBoxItem}">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Foreground" Value="{DynamicResource lightBrush}" />
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="HorizontalContentAlignment"
                            Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource TemplatedParent}}" />
                    <Setter Property="Padding" Value="2,5" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                <Border SnapsToDevicePixels="True" Background="{TemplateBinding Background}"
                                        BorderThickness="0" Padding="{TemplateBinding Padding}">
                                    <ContentPresenter
                                            HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource skinBrush}" />
                                        <Setter Property="Foreground" Value="White" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{DynamicResource lightBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource selectBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="Transparent"
                            SnapsToDevicePixels="True">
                        <Grid>
                            <Border Background="{DynamicResource selectBrush}" Opacity=".3" />
                            <Border x:Name="Border">
                                <Popup x:Name="PART_Popup" AllowsTransparency="False" Focusable="False"
                                        IsOpen="{TemplateBinding IsDropDownOpen}"
                                        PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                                        Placement="Bottom">
                                    <Border x:Name="DropDownBorder" Background="{DynamicResource selectBrush}"
                                            MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                            MinWidth="{Binding ActualWidth, ElementName=Border}"
                                            BorderBrush="{DynamicResource selectBrush}" BorderThickness="1">
                                        <ScrollViewer x:Name="DropDownScrollViewer" VerticalScrollBarVisibility="Hidden">
                                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                                <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top"
                                                        Width="0">
                                                    <Rectangle x:Name="OpaqueRect"
                                                            Fill="{Binding Background, ElementName=DropDownBorder}"
                                                            Height="{Binding ActualHeight, ElementName=DropDownBorder}"
                                                            Width="{Binding ActualWidth, ElementName=DropDownBorder}" />
                                                </Canvas>
                                                <ItemsPresenter x:Name="ItemsPresenter"
                                                        KeyboardNavigation.DirectionalNavigation="Contained"
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                            </Grid>
                                        </ScrollViewer>
                                    </Border>
                                </Popup>
                            </Border>
                            <DockPanel Margin="{TemplateBinding Padding}">
                                <FrameworkElement DockPanel.Dock="Right"
                                        Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
                                <FrameworkElement DockPanel.Dock="Right" Width="2" />
                                <Border x:Name="SelectedItemBorder" Padding="2"
                                        Background="{TemplateBinding Background}">
                                    <ContentPresenter ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                            Content="{TemplateBinding SelectionBoxItem}"
                                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                            ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Border>
                            </DockPanel>
                            <ToggleButton ClickMode="Press" Style="{StaticResource combo_toggle}" Focusable="False"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                    Margin="{TemplateBinding Padding}" MinWidth="0" MinHeight="0" Width="Auto" />
                            <ListView Visibility="Hidden" ItemTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                    ItemTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                    ItemsSource="{Binding Items, RelativeSource={RelativeSource TemplatedParent}}">
                                <ListView.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <Grid />
                                    </ItemsPanelTemplate>
                                </ListView.ItemsPanel>
                            </ListView>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--<MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelectionBoxHighlighted" Value="True" />
                                <Condition Property="IsDropDownOpen" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="White" />
                        </MultiTrigger>-->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource selectBrush}" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="False">
                            <Setter Property="MinHeight" TargetName="DropDownBorder" Value="50" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            <Setter Property="Background"
                                    Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="True" />
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                        </MultiTrigger>
                        <Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
                            <Setter Property="Canvas.Top" TargetName="OpaqueRect"
                                    Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                            <Setter Property="Canvas.Left" TargetName="OpaqueRect"
                                    Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="True">
                <Setter Property="IsTabStop" Value="False" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBox}">
                            <Border Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                <Grid x:Name="root">
                                    <Border Background="{DynamicResource selectBrush}" Opacity=".3" />
                                    <Border x:Name="Border" Background="{TemplateBinding Background}">
                                        <Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False"
                                                IsOpen="{TemplateBinding IsDropDownOpen}"
                                                PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                                                Placement="Bottom">
                                            <Border x:Name="DropDownBorder"
                                                    MinWidth="{Binding ActualWidth, ElementName=root}"
                                                    BorderBrush="{DynamicResource selectBrush}" BorderThickness="1"
                                                    Background="{DynamicResource selectBrush}">
                                                <ScrollViewer x:Name="DropDownScrollViewer">
                                                    <Grid RenderOptions.ClearTypeHint="Enabled">
                                                        <Canvas HorizontalAlignment="Left" Height="0"
                                                                VerticalAlignment="Top" Width="0">
                                                            <Rectangle x:Name="OpaqueRect"
                                                                    Fill="{Binding Background, ElementName=DropDownBorder}"
                                                                    Height="{Binding ActualHeight, ElementName=DropDownBorder}"
                                                                    Width="{Binding ActualWidth, ElementName=DropDownBorder}" />
                                                        </Canvas>
                                                        <ItemsPresenter x:Name="ItemsPresenter"
                                                                KeyboardNavigation.DirectionalNavigation="Contained"
                                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                    </Grid>
                                                </ScrollViewer>
                                            </Border>
                                        </Popup>
                                    </Border>
                                    <ToggleButton ClickMode="Press" Style="{StaticResource combo_toggle}"
                                            BorderBrush="{TemplateBinding BorderBrush}" Focusable="False"
                                            IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                            Margin="{TemplateBinding Padding}" MinWidth="0" MinHeight="0" Width="Auto" />
                                    <DockPanel Margin="{TemplateBinding Padding}">
                                        <FrameworkElement DockPanel.Dock="Right"
                                                Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
                                        <FrameworkElement Width="2" DockPanel.Dock="Right" />
                                        <TextBox x:Name="PART_EditableTextBox"
                                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"
                                                SelectionBrush="{DynamicResource skinBrush}"
                                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                                            <TextBox.Style>
                                                <Style TargetType="{x:Type TextBox}">
                                                    <Setter Property="Background" Value="#01ffffff" />
                                                    <Setter Property="BorderBrush"
                                                            Value="{Binding BorderBrush,RelativeSource={RelativeSource AncestorType=ComboBox}}" />
                                                    <Setter Property="OverridesDefaultStyle" Value="True" />
                                                    <Setter Property="AllowDrop" Value="True" />
                                                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                                    <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
                                                    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type TextBox}">
                                                                <ScrollViewer x:Name="PART_ContentHost"
                                                                        Background="{TemplateBinding Background}"
                                                                        Focusable="False"
                                                                        HorizontalScrollBarVisibility="Hidden"
                                                                        VerticalScrollBarVisibility="Hidden" />
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Style.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Background"
                                                                    Value="{Binding BorderBrush,RelativeSource={RelativeSource Self}}" />
                                                        </Trigger>
                                                        <Trigger Property="IsFocused" Value="True">
                                                            <Setter Property="Background"
                                                                    Value="{Binding BorderBrush,RelativeSource={RelativeSource Self}}" />
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBox.Style>
                                        </TextBox>
                                    </DockPanel>
                                    <ListView IsHitTestVisible="False" Visibility="Collapsed"
                                            ItemTemplate="{TemplateBinding ItemTemplate}"
                                            ItemsSource="{Binding Items, RelativeSource={RelativeSource TemplatedParent}}">
                                        <ListView.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <Grid />
                                            </ItemsPanelTemplate>
                                        </ListView.ItemsPanel>
                                    </ListView>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasItems" Value="False">
                                    <Setter Property="MinHeight" TargetName="DropDownBorder" Value="50" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource selectBrush}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground"
                                            Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                    <Setter Property="Background"
                                            Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsGrouping" Value="True" />
                                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                                </MultiTrigger>
                                <Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
                                    <Setter Property="Canvas.Top" TargetName="OpaqueRect"
                                            Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                                    <Setter Property="Canvas.Left" TargetName="OpaqueRect"
                                            Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>