<UserControl x:Class="Jean_Doe.MusicControl.SongListControl"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" mc:Ignorable="d"
        xmlns:my='clr-namespace:Jean_Doe.MusicControl' x:Name="me">
    <UserControl.Resources>
        <my:IntToVisibilityConverter x:Key="int2vis" />
        <my:BoolToOpacityConverter x:Key='bool2opa' />
        <my:BoolToVisibilityConverter x:Key="bool2vis" />
        <my:DivideConverter x:Key="divconv" />
        <Storyboard x:Key="FadeOut">
            <DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" From="1" To="0" />
        </Storyboard>
        <Style x:Key="linkStyle" TargetType="{x:Type Hyperlink}">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="{DynamicResource skinBrush}" />
                </Trigger>
            </Style.Triggers>
            <Setter Property="TextBlock.TextDecorations" Value="{x:Null}" />
            <Setter Property="Foreground"
                    Value="{Binding Foreground,RelativeSource={RelativeSource AncestorType=TextBlock}}" />
        </Style>
        <Style TargetType="TextBlock" x:Key="label_base">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="FontSize" Value="15" />
            <Setter Property="FontFamily" Value="Segoe UI Light" />
            <Setter Property="TextTrimming" Value="WordEllipsis" />
        </Style>
        <Style TargetType="TextBlock" x:Key="tag_base" BasedOn="{StaticResource label_base}">
            <Setter Property="Margin" Value="0,0,0,-5" />
            <Setter Property="Foreground" Value="#555" />
            <Setter Property="ClipToBounds" Value="True" />
            <Setter Property="FontSize" Value="35" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="Height" Value="35" />
            <Setter Property="VerticalAlignment" Value="Bottom" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="White" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <DataTemplate x:Key="imageTemplate">
            <Grid  Margin="5">
                <Image TargetUpdated="Image_SourceUpdated_1" Width="60" Height="60" Margin="0"
                        Source="{Binding ImageSource,NotifyOnTargetUpdated=True,UpdateSourceTrigger=PropertyChanged}"
                        Stretch="Uniform"></Image>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="trackNoTemplate">
            <TextBlock Visibility="{Binding TrackNo,
                                 Converter={StaticResource int2vis}}" Text="{Binding TrackNo,StringFormat={}{0:D2}.}"
                    Margin="0" Style="{StaticResource label_base}" />
        </DataTemplate>
        <DataTemplate x:Key="dateTemplate">
            <TextBlock Text="{Binding Date, StringFormat={}{0:yyyy/MM/dd HH:mm:ss}}" Style="{StaticResource label_base}" />
        </DataTemplate>
        <DataTemplate x:Key="statusTemplate">
            <Grid Margin="5" MinWidth="100">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height='Auto' />
                </Grid.RowDefinitions>
                <TextBlock Text="{Binding Status}" Style="{StaticResource label_base}" HorizontalAlignment="Center" />
                <!--下载状态-->
                <Grid Grid.Row="1">
                    <Grid.Resources>
                        <Style TargetType='Rectangle'>
                            <Setter Property='MinWidth' Value='80' />
                            <Setter Property='Height' Value='10' />
                            <Setter Property='Margin' Value='0,0,3,0' />
                            <Setter Property='Fill' Value='{DynamicResource skinBrush}' />
                        </Style>
                    </Grid.Resources>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid x:Name='grid' Grid.ColumnSpan="10">
                        <Rectangle Width="{Binding ElementName=mp3Indicator,Path=ActualWidth}"
                                HorizontalAlignment="Left">
                            <Rectangle.RenderTransform>
                                <ScaleTransform ScaleX="{Binding Percent}" />
                            </Rectangle.RenderTransform>
                        </Rectangle>
                        <Rectangle ToolTip='Mp3下载' x:Name="mp3Indicator"
                                Opacity='{Binding HasMp3,Converter={StaticResource bool2opa}}' />
                    </Grid>
                    <!--<Rectangle Grid.Column="1" ToolTip='封面下载'
                            Opacity='{Binding HasArt,Converter={StaticResource bool2opa}}' />
                    <Rectangle Grid.Column="2" ToolTip='歌词下载'
                            Opacity='{Binding HasLrc,Converter={StaticResource bool2opa}}' />-->
                </Grid>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="PlayTimesTemplate">
            <Grid MinWidth="100" Margin="5" x:Name="grid">
                <TextBlock Style="{StaticResource label_base}" Text="{Binding PlayTimes,StringFormat=播放{0}次}" />
                <Rectangle Fill="{DynamicResource selectBrush}" Width="{Binding ElementName=grid,Path=ActualWidth}"
                        VerticalAlignment="Bottom" Height="10" HorizontalAlignment="Left">
                    <Rectangle.RenderTransform>
                        <ScaleTransform>
                            <ScaleTransform.ScaleX>
                                <MultiBinding Converter="{StaticResource divconv}">
                                    <Binding Path="PlayTimes" />
                                    <Binding Path="MaxPlayTimes"
                                            RelativeSource="{RelativeSource AncestorType=my:SearchSongListControl}" />
                                </MultiBinding>
                            </ScaleTransform.ScaleX>
                        </ScaleTransform>
                    </Rectangle.RenderTransform>
                </Rectangle>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="AlbumTemplate">
            <Grid Margin="5">
                <TextBlock Style="{StaticResource tag_base}">
                    <Hyperlink Style="{StaticResource linkStyle}" Click='go_album'>album</Hyperlink></TextBlock>
                <TextBlock Style="{StaticResource label_base}">
                                        <Hyperlink Click='link_album' Style="{StaticResource linkStyle}">
                                            <TextBlock Text="{Binding AlbumName}" />
                                        </Hyperlink>
                                    </TextBlock>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="ArtistTemplate">
            <Grid Margin="5">
                <TextBlock Style="{StaticResource tag_base}">
                    <Hyperlink Style="{StaticResource linkStyle}" Click='go_artist'>artist</Hyperlink></TextBlock>
                <TextBlock Style="{StaticResource label_base}">
                                        <Hyperlink Click='link_artist' Style="{StaticResource linkStyle}">
                                            <TextBlock Text="{Binding ArtistName}" />
                                        </Hyperlink>
                                    </TextBlock>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="CollectionTemplate">
            <Grid Margin="5">
                <TextBlock Style="{StaticResource tag_base}">
                    <Hyperlink Style="{StaticResource linkStyle}" Click='go_collect'>collect</Hyperlink></TextBlock>
                <TextBlock Style="{StaticResource label_base}">
                                        <Hyperlink Click='link_collection' Style="{StaticResource linkStyle}">
                                            <TextBlock Text="{Binding CollectionName}" />
                                        </Hyperlink>
                                    </TextBlock>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="SongTemplate">
            <Grid Margin="5">
                <DockPanel>
                    <TextBlock Style="{StaticResource label_base}">
                    <Hyperlink Style="{StaticResource linkStyle}" Click='go_song'>
                        <TextBlock Text="{Binding Name}" IsHitTestVisible="True" />
                    </Hyperlink></TextBlock>
                    <TextBlock Style="{StaticResource label_base}" Text=" - " />
                    <TextBlock Style="{StaticResource label_base}" Grid.Row="1">
                    <Hyperlink Style="{StaticResource linkStyle}" Click='link_artist'>
                        <TextBlock Text="{Binding ArtistName}" />
                    </Hyperlink></TextBlock>
                </DockPanel>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="downloadingTemplate">
            <Grid Width="220" Height="70">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Image TargetUpdated="Image_SourceUpdated_1" Width="60" Height="60"  
                       VerticalAlignment="Top"
                        Source="{Binding ImageSource,NotifyOnTargetUpdated=True,UpdateSourceTrigger=PropertyChanged}"
                        Stretch="Uniform"/>
                <StackPanel Grid.Column="1" VerticalAlignment="Top" Margin="10,0">
                    <TextBlock Text="{Binding Name}" FontSize="18" Style="{StaticResource label_base}"/>
                    <TextBlock Style="{StaticResource label_base}"  Text="{Binding ArtistName}" />
                    <Grid  MinWidth="100">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height='Auto' />
                        </Grid.RowDefinitions>
                        <TextBlock Text="{Binding Status}" Opacity="0.5"  Style="{StaticResource label_base}" />
                        <!--下载状态-->
                        <Grid Grid.Row="1">
                            <Grid.Resources>
                                <Style TargetType='Rectangle'>
                                    <Setter Property='MinWidth' Value='80' />
                                    <Setter Property='Height' Value='5' />
                                    <Setter Property='Margin' Value='0,0,3,0' />
                                    <Setter Property='Fill' Value='{DynamicResource lightBrush}' />
                                </Style>
                            </Grid.Resources>
                            <Grid>
                                <Rectangle Width="{Binding  ElementName=mp3Indicator,Path=ActualWidth}"
                                HorizontalAlignment="Left">
                                    <Rectangle.RenderTransform>
                                        <ScaleTransform ScaleX="{Binding Percent}" />
                                    </Rectangle.RenderTransform>
                                </Rectangle>
                                <Rectangle ToolTip='Mp3下载' x:Name="mp3Indicator"
                                Opacity='{Binding HasMp3,Converter={StaticResource bool2opa}}' />
                            </Grid>
                        </Grid>
                    </Grid>
                </StackPanel>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="completeTemplate">
            <Grid Width="220" Height="70" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Image   Width="60" Height="60"  
                        Source="/Jean_Doe.MusicControl;component/Resources/nocover.png"
                        Stretch="Uniform" VerticalAlignment="Top"/>
                <Image TargetUpdated="Image_SourceUpdated_1" Width="60" Height="60"  
                        Source="{Binding ImageSource,NotifyOnTargetUpdated=True,UpdateSourceTrigger=PropertyChanged}"
                        Stretch="Uniform" VerticalAlignment="Top"/>
                <StackPanel Grid.Column="1" VerticalAlignment="Top" Margin="10,0">
                    <TextBlock Text="{Binding Name}" FontSize="18"  Style="{DynamicResource label_base}"/>
                    <TextBlock Style="{StaticResource label_base}"   Text="{Binding ArtistName}" />
                    <TextBlock Style="{StaticResource label_base}"   Text="{Binding AlbumName}" />
                    <!--<TextBlock Text="{Binding Date, StringFormat={}{0:yyyy/MM/dd HH:mm:ss}}" Style="{StaticResource label_base}" />-->
                </StackPanel>
            </Grid>
        </DataTemplate>
        <SolidColorBrush Color='{DynamicResource skinColor}' Opacity="0.2" x:Key='skinBrushFade' />
        <my:MyStyleSelector x:Key="styleSelector" AlbumTemplate="{StaticResource AlbumTemplate}"
                ArtistTemplate="{StaticResource ArtistTemplate}" SongTemplate="{StaticResource SongTemplate}"
                CollectionTemplate="{StaticResource CollectionTemplate}" />
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <DockPanel x:Name="now_playing"  LastChildFill="False" DataContext="{Binding NowPlaying,ElementName=me}">
            <DockPanel.Resources>
                <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                    <Setter Property="Margin" Value="5,0"/>
                    <Setter Property="Padding" Value="10"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="FontFamily" Value="Segoe UI Symbol"/>
                </Style>
                <Style TargetType="TextBlock" >
                    <Setter Property="Foreground"  Value="White"/>
                    <Setter Property="FontFamily" Value="Segoe UI Symbol"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                </Style>
            </DockPanel.Resources>
            <Button    x:Name="btn_show" Content="{Binding Name}">
            </Button>
            <!--<ContentControl Foreground="White" IsHitTestVisible="False" Content="{Binding}" HorizontalAlignment="Left">
                <ContentControl.ContentTemplate>
                    <DataTemplate>
                        <Grid>
                            <TextBlock Text="{Binding Name}" VerticalAlignment="Center"/>
                        </Grid>
                    </DataTemplate>
                </ContentControl.ContentTemplate>
            </ContentControl>-->
        </DockPanel>
        <DockPanel Grid.Row="1" Margin="5,10"    LastChildFill="False" Visibility="{Binding ItemsCount,ElementName=me,Converter={StaticResource int2vis}}">
            <ComboBox  x:Name="combo_sort">
                <ComboBoxItem Tag="Default_Asc" IsSelected="True">无排序</ComboBoxItem>
                <ComboBoxItem Tag="Date_Dsc">最近下载</ComboBoxItem>
                <ComboBoxItem Tag="Date_Asc">最早下载</ComboBoxItem>
                <ComboBoxItem Tag="Name_Asc">名称升序</ComboBoxItem>
                <ComboBoxItem Tag="Name_Dsc">名称降序</ComboBoxItem>
            </ComboBox>
            <Grid Margin="0,0" >
                <TextBox VerticalContentAlignment="Center"  Foreground="White"  BorderThickness="0" Width="200" x:Name="input_filter" Background="#555"/>
                <TextBlock VerticalAlignment="Center" Margin="3" x:Name="mask_filter" Text="输入字符以过滤"  IsHitTestVisible="False" Foreground="{DynamicResource lightBrush}"  />
            </Grid>
            <Button   Content="&#xE16E;" Margin="1,0" MinWidth="0"  Width="70" x:Name="btn_filter" FontFamily="Segoe UI Symbol"/>
        </DockPanel>
        <TextBlock FontSize="20" HorizontalAlignment="Left" VerticalAlignment="Top" Style="{StaticResource label_base}" Margin="10,10,0,0" Grid.Row="2">列表为空</TextBlock>
        <ListView Grid.Row="2" ItemTemplate="{StaticResource completeTemplate}" ScrollViewer.HorizontalScrollBarVisibility="Disabled"
            BorderThickness="0" 
            Background="Transparent" 
                  ItemsSource="{Binding}"
            x:Name="listView" Foreground="White" SelectionMode="Extended" >
            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}">
                    <Style.Triggers>
                        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" From="0" EasingFunction="{StaticResource easeFunc}"
                                            To="1" />
                                    <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(Children)[0].(ScaleX)"   Duration="0:0:0.2"   EasingFunction="{StaticResource easeFunc}"
                                            To="1" />
                                    <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(Children)[0].(ScaleY)" Duration="0:0:0.2"   EasingFunction="{StaticResource easeFunc}"
                                            To="1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="FrameworkElement.Unloaded">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" From="1"
                                            To="0" />
                                    <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(Children)[0].(ScaleX)"   Duration="0:0:0.2"   EasingFunction="{StaticResource easeFunc}"
                                            To="0" />
                                    <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(Children)[0].(ScaleY)" Duration="0:0:0.2"   EasingFunction="{StaticResource easeFunc}"
                                            To="0" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Style.Triggers>
                    <Setter Property="RenderTransform">
                        <Setter.Value>
                            <TransformGroup>
                                <ScaleTransform ScaleX="0" ScaleY="0"/>
                            </TransformGroup>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="RenderTransformOrigin" Value=".5,.5"/>
                    <Setter Property="Margin" Value="5"/>
                    <Setter Property="Padding" Value="15"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                <Grid Background="Black" x:Name="root" RenderTransformOrigin=".5,.5">
                                    <Grid.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="1" ScaleY="1"/>
                                        </TransformGroup>
                                    </Grid.RenderTransform>
                                    <Rectangle x:Name="normal"  Fill="#444" />
                                    <Rectangle x:Name="mouseover" Opacity="0" StrokeThickness="4" Stroke="{Binding TypeColor}"/>
                                    <Grid x:Name="pressed" Opacity="0">
                                        <Border BorderThickness="4" BorderBrush="{Binding TypeColor}" />
                                        <TextBlock Text="&#x25E5;" FontFamily="Segoe UI Symbol" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,-15,0,0" FontSize="45" Foreground="{Binding TypeColor}"/>
                                        <TextBlock Text="&#xE001;"  FontFamily="Segoe UI Symbol" HorizontalAlignment="Right" VerticalAlignment="Top" FontSize="15" Foreground="White"/>
                                    </Grid>
                                    <TextBlock  Text="{Binding Type}"
                                                Margin="5,0,0,5"
                                        Foreground="White"  
                                        FontFamily="Segoe UI Light" 
                                        Opacity="1" 
                                        HorizontalAlignment="Left" VerticalAlignment="Bottom" 
                                        FontSize="13"
                                        />
                                    <ContentPresenter Margin="{TemplateBinding Padding}"/>
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="MouseOver">
                                                <Storyboard>
                                                    <DoubleAnimation 
                                                        Storyboard.TargetName="mouseover" 
                                                        Storyboard.TargetProperty="Opacity" 
                                                        Duration="0:0:0.2" To="1"/>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Disabled"/>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="SelectionStates">
                                            <VisualStateGroup.Transitions>
                                                <VisualTransition To="Unselected" GeneratedDuration="0:0:0.1" />
                                                <VisualTransition To="Selected" GeneratedDuration="0:0:0.1"/>
                                            </VisualStateGroup.Transitions>
                                            <VisualState x:Name="Selected">
                                                <Storyboard>
                                                    <DoubleAnimation 
                                                        Storyboard.TargetName="pressed" 
                                                        Storyboard.TargetProperty="Opacity" 
                                                        Duration="0:0:0.2" To="1"/>
                                                    <DoubleAnimation 
                                                        Storyboard.TargetName="root"
                                                        Storyboard.TargetProperty="(RenderTransform).(Children)[0].(ScaleX)"   Duration="0"  
                                                        To="0.95" />
                                                    <DoubleAnimation 
                                                        Storyboard.TargetName="root"
                                                        Storyboard.TargetProperty="(RenderTransform).(Children)[0].(ScaleY)"   Duration="0" 
                                                        To="0.95" />
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Unselected"/>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="FocusStates">
                                            <VisualState x:Name="Focused"/>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="ValidationStates">
                                            <VisualState x:Name="InvalidFocused"/>
                                            <VisualState x:Name="InvalidUnfocused"/>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel   HorizontalAlignment="Left" Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </ListView.ItemsPanel>
        </ListView>
        <!--<DataGrid  Visibility="{Binding Path=ItemsCount, ElementName=me,Converter={StaticResource int2vis}}"
                ScrollViewer.CanContentScroll="False"
                  HeadersVisibility="None" BorderThickness="0" Background="Transparent" GridLinesVisibility="None"
                VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling"
                ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Auto"
                SelectionUnit="FullRow" CanUserAddRows="False" x:Name="dataGrid" AutoGenerateColumns="false">
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#3555" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{DynamicResource selectBrush}" />
                        </Trigger>
                        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0.3" From="0"
                                            To="1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="FrameworkElement.Unloaded">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0.3" From="1"
                                            To="0" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Style.Triggers>
                    <EventSetter Event="MouseLeftButtonDown" Handler="btn_select_click" />
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Margin" Value="0,15" />
                    <Setter Property="BorderThickness" Value="0,0,0,0" />
                    <Setter Property="BorderBrush" Value="#555" />
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.CellStyle>
                <Style TargetType="{x:Type DataGridCell}">
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                    </Style.Triggers>
                    <Setter Property="BorderBrush" Value="Transparent" />
                    <Setter Property="Foreground" Value="{DynamicResource lightBrush}" />
                    <Setter Property="Background" Value="Transparent" />
                </Style>
            </DataGrid.CellStyle>
            <DataGrid.ColumnHeaderStyle>
                <Style TargetType="DataGridColumnHeader">
                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Foreground" Value="{DynamicResource lightBrush}" />
                    <Setter Property="BorderBrush" Value="#888" />
                    <Setter Property="BorderThickness" Value="0,0,0,0" />
                    <Setter Property="Margin" Value="0,0,0,10" />
                    <Setter Property="Padding" Value="10,2" />
                    <Setter Property="HorizontalContentAlignment" Value="Left" />
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#888" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0.5" From="0"
                                            To="1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="FrameworkElement.Unloaded">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0.5" From="1"
                                            To="0" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.ColumnHeaderStyle>
            <DataGrid.Columns>
                <DataGridTemplateColumn  Width="Auto" SortMemberPath="AlbumName" Header="专辑封面"
                        CellTemplate="{StaticResource imageTemplate}" />
                <DataGridTemplateColumn   Width="Auto" SortMemberPath="TrackNo" Header="编号"
                        CellTemplate="{StaticResource trackNoTemplate}" />
                <DataGridTemplateColumn SortMemberPath="Name" IsReadOnly='True' Width="Auto" MinWidth="200" Header="名称"
                        CellTemplateSelector="{StaticResource styleSelector}" />
                <DataGridTemplateColumn SortMemberPath="ArtistName" IsReadOnly='True' Width="Auto" x:Name="col_artist"
                        Header="艺术家" CellTemplate="{StaticResource ArtistTemplate}" />
                <DataGridTemplateColumn SortMemberPath="AlbumName" IsReadOnly='True' Header="专辑" x:Name="col_album"
                        Width="Auto" CellTemplate="{StaticResource AlbumTemplate}" />
            </DataGrid.Columns>
        </DataGrid>-->
    </Grid>
</UserControl>
